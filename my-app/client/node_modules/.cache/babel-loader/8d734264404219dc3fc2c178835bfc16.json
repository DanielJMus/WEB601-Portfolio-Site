{"ast":null,"code":"const LOGIN_PENDING = 'LOGIN_PENDING';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_ERROR = 'LOGIN_ERROR';\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction SetLoginSuccess(isLoginSuccess) {\n  return {\n    type: LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction SetLoginError(isLoginError) {\n  return {\n    type: LOGIN_ERROR,\n    isLoginError\n  };\n}\n\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(SetLoginSuccess(false));\n    dispatch(SetLoginError(false));\n    sendLoginRequest(username, password).then(success => {\n      dispatch(setLoginPending(false));\n      dispatch(SetLoginSuccess(true));\n    }).catch(error => {\n      dispatch(setLoginPending(false));\n      dispatch(SetLoginError(error));\n    });\n  };\n}","map":{"version":3,"sources":["D:\\Documents\\NMIT\\WEB601\\WEB601-Portfolio-Site\\my-app\\client\\src\\Actions\\index.js"],"names":["LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_ERROR","setLoginPending","isLoginPending","type","SetLoginSuccess","isLoginSuccess","SetLoginError","isLoginError","login","username","password","dispatch","sendLoginRequest","then","success","catch","error"],"mappings":"AAAA,MAAMA,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,SAASC,eAAT,CAAyBC,cAAzB,EAAyC;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEL,aADH;AAEHI,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,eAAT,CAA0BC,cAA1B,EAA0C;AACtC,SAAO;AACHF,IAAAA,IAAI,EAAEJ,aADH;AAEHM,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASC,aAAT,CAAwBC,YAAxB,EAAsC;AAClC,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WADH;AAEHO,IAAAA;AAFG,GAAP;AAIH;;AAED,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACtC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACV,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAU,IAAAA,QAAQ,CAACP,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAO,IAAAA,QAAQ,CAACL,aAAa,CAAC,KAAD,CAAd,CAAR;AAEAM,IAAAA,gBAAgB,CAACH,QAAD,EAAWC,QAAX,CAAhB,CACKG,IADL,CACUC,OAAO,IAAI;AACbH,MAAAA,QAAQ,CAACV,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAU,MAAAA,QAAQ,CAACP,eAAe,CAAC,IAAD,CAAhB,CAAR;AACH,KAJL,EAKKW,KALL,CAKWC,KAAK,IAAI;AACZL,MAAAA,QAAQ,CAACV,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAU,MAAAA,QAAQ,CAACL,aAAa,CAACU,KAAD,CAAd,CAAR;AACH,KARL;AASH,GAdD;AAeH","sourcesContent":["const LOGIN_PENDING = 'LOGIN_PENDING';\r\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nconst LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\nfunction setLoginPending(isLoginPending) {\r\n    return {\r\n        type: LOGIN_PENDING,\r\n        isLoginPending\r\n    };\r\n}\r\n\r\nfunction SetLoginSuccess (isLoginSuccess) {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        isLoginSuccess\r\n    };\r\n}\r\n\r\nfunction SetLoginError (isLoginError) {\r\n    return {\r\n        type: LOGIN_ERROR,\r\n        isLoginError\r\n    };\r\n}\r\n\r\nexport function login(username, password) {\r\n    return dispatch => {\r\n        dispatch(setLoginPending(true));\r\n        dispatch(SetLoginSuccess(false));\r\n        dispatch(SetLoginError(false));\r\n\r\n        sendLoginRequest(username, password)\r\n            .then(success => {\r\n                dispatch(setLoginPending(false));\r\n                dispatch(SetLoginSuccess(true));\r\n            })\r\n            .catch(error => {\r\n                dispatch(setLoginPending(false));\r\n                dispatch(SetLoginError(error));\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\NMIT\\\\WEB601\\\\WEB601-Portfolio-Site\\\\my-app\\\\client\\\\src\\\\Components\\\\database\\\\admin\\\\updateModel-form.js\";\nimport React from 'react';\nexport class ModelUpdate extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // Submit the form data, updating the specified model data in the database.\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:4200/api/models/' + this.ID.value, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"ID\": this.ID.value,\n        \"Title\": this.Title.value,\n        \"Description\": this.Description.value,\n        \"URL\": this.URL.value,\n        \"ImageURL\": this.ImageURL.value\n      })\n    }).then(res => {\n      if (res.status === 201) alert(\"Successfully updated model.\");else alert(res.status);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Update Model Entry\")), React.createElement(\"div\", {\n      className: \"register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"ID:\", React.createElement(\"input\", {\n      ref: ref => {\n        this.ID = ref;\n      },\n      type: \"number\",\n      id: \"input-id\",\n      name: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Title:\", React.createElement(\"input\", {\n      ref: ref => {\n        this.Title = ref;\n      },\n      type: \"text\",\n      id: \"input-tilte\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Description:\", React.createElement(\"input\", {\n      ref: ref => {\n        this.Description = ref;\n      },\n      type: \"text\",\n      id: \"input-description\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"URL:\", React.createElement(\"input\", {\n      ref: ref => {\n        this.URL = ref;\n      },\n      type: \"text\",\n      id: \"input-url\",\n      name: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Image URL:\", React.createElement(\"input\", {\n      ref: ref => {\n        this.ImageURL = ref;\n      },\n      type: \"text\",\n      id: \"input-url\",\n      name: \"imageurl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"input-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["D:\\Documents\\NMIT\\WEB601\\WEB601-Portfolio-Site\\my-app\\client\\src\\Components\\database\\admin\\updateModel-form.js"],"names":["React","ModelUpdate","Component","constructor","handleSubmit","bind","event","preventDefault","fetch","ID","value","method","headers","body","JSON","stringify","Title","Description","URL","ImageURL","then","res","status","alert","render","ref"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nexport class ModelUpdate extends React.Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    // Submit the form data, updating the specified model data in the database.\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:4200/api/models/' + this.ID.value, {\r\n            method: 'put',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({\r\n             \"ID\": this.ID.value,\r\n             \"Title\": this.Title.value,\r\n             \"Description\": this.Description.value,\r\n             \"URL\": this.URL.value,\r\n             \"ImageURL\": this.ImageURL.value\r\n            })\r\n        }).then(res => {\r\n            if (res.status === 201) alert(\"Successfully updated model.\")\r\n            else alert(res.status)\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"content\">\r\n                <header>\r\n                    <h1>Update Model Entry</h1>\r\n                </header>\r\n                <div className='register-form'>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        ID:\r\n                        <input ref={(ref) => {this.ID = ref}} type=\"number\" id=\"input-id\" name=\"id\"/>\r\n                    </label><br></br>\r\n                    <label>\r\n                        Title:\r\n                        <input ref={(ref) => {this.Title = ref}} type=\"text\" id=\"input-tilte\" name=\"title\"/>\r\n                    </label><br></br>\r\n                    <label>\r\n                        Description:\r\n                        <input ref={(ref) => {this.Description = ref}} type=\"text\" id=\"input-description\" name=\"description\"/>\r\n                    </label><br></br>\r\n                    <label>\r\n                        URL:\r\n                        <input ref={(ref) => {this.URL = ref}} type=\"text\" id=\"input-url\" name=\"url\"/>\r\n                    </label><br></br>\r\n                    <label>\r\n                        Image URL:\r\n                        <input ref={(ref) => {this.ImageURL = ref}} type=\"text\" id=\"input-url\" name=\"imageurl\"/>\r\n                    </label><br></br>\r\n                    <input type=\"submit\" id=\"input-submit\"/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}